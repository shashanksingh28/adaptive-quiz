https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html
Method References
You use lambda expressions to create anonymous methods. Sometimes, however, a lambda expression does nothing but call an existing method. In those cases, it's often clearer to refer to the existing method by name. Method references enable you to do this; they are compact, easy-to-read lambda expressions for methods that already have a name.Consider again the Person class discussed in the section Lambda Expressions:Suppose that the members of your social networking application are contained in an array, and you want to sort the array by age. You could use the following code (find the code excerpts described in this section in the example MethodReferencesTest):The method signature of this invocation of sort is the following:Notice that the interface Comparator is a functional interface. Therefore, you could use a lambda expression instead of defining and then creating a new instance of a class that implements Comparator:However, this method to compare the birth dates of two Person instances already exists as Person.compareByAge. You can invoke this method instead in the body of the lambda expression:Because this lambda expression invokes an existing method, you can use a method reference instead of a lambda expression:The method reference Person::compareByAge is semantically the same as the lambda expression (a, b) -> Person.compareByAge(a, b). Each has the following characteristics:There are four kinds of method references:The method reference Person::compareByAge is a reference to a static method.The following is an example of a reference to an instance method of a particular object:The method reference myComparisonProvider::compareByName invokes the method compareByName that is part of the object myComparisonProvider. The JRE infers the method type arguments, which in this case are (Person, Person).The following is an example of a reference to an instance method of an arbitrary object of a particular type:The equivalent lambda expression for the method reference String::compareToIgnoreCase would have the formal parameter list (String a, String b), where a and b are arbitrary names used to better describe this example. The method reference would invoke the method a.compareToIgnoreCase(b).You can reference a constructor in the same way as a static method by using the name new. The following method copies elements from one collection to another:The functional interface Supplier contains one method get that takes no arguments and returns an object. Consequently, you can invoke the method transferElements with a lambda expression as follows:You can use a constructor reference in place of the lambda expression as follows:The Java compiler infers that you want to create a HashSet collection that contains elements of type Person. Alternatively, you can specify this as follows: