https://docs.oracle.com/javase/tutorial/java/nutsandbolts/op1.html
Assignment, Arithmetic, and Unary Operators
One of the most common operators that you'll encounter is the simple assignment operator "=". You saw this operator in the Bicycle class; it assigns the value on its right to the operand on its left:This operator can also be used on objects to assign object references, as discussed in Creating Objects.The Java programming language provides operators that perform addition, subtraction, multiplication, and division. There's a good chance you'll recognize them by their counterparts in basic mathematics. The only symbol that might look new to you is "%", which divides one operand by another and returns the remainder as its result.The following program, ArithmeticDemo, tests the arithmetic operators.This program prints the following:You can also combine the arithmetic operators with the simple assignment operator to create compound assignments. For example, x+=1; and x=x+1; both increment the value of x by 1.The + operator can also be used for concatenating (joining) two strings together, as shown in the following ConcatDemo program:By the end of this program, the variable thirdString contains "This is a concatenated string.", which gets printed to standard output.The unary operators require only one operand; they perform various operations such as incrementing/decrementing a value by one, negating an expression, or inverting the value of a boolean.The following program, UnaryDemo, tests the unary operators:The increment/decrement operators can be applied before (prefix) or after (postfix) the operand. The code result++; and ++result; will both end in result being incremented by one. The only difference is that the prefix version (++result) evaluates to the incremented value, whereas the postfix version (result++) evaluates to the original value. If you are just performing a simple increment/decrement, it doesn't really matter which version you choose. But if you use this operator in part of a larger expression, the one that you choose may make a significant difference.The following program, PrePostDemo, illustrates the prefix/postfix unary increment operator: