https://en.wikibooks.org/wiki/Java_Programming/Destroying_Objects#Creating_object_receiving_from_a_remote_source
Object Lifecycle - Creating object receiving from a remote source
When an object is sent through a network, the object needs to be recreated at the receiving host.Java has built-in support for serialization, using the Serializable interface; however, a class must first implement the Serializable interface.By default, a class will have all of its fields serialized when converted into a data stream (with transient fields being skipped). If additional handling is required beyond the default of writing all fields, you need to provide an implementation for methods:If the object needs to write or provide a replacement object during serialization, it needs to implement the following two methods, with any access specifier:Normally, a minor change to the class can cause the serialization to fail. You can still allow the class to be loaded by defining the serialization version id: