https://en.wikibooks.org/wiki/Java_Programming/Spring_framework#Afterthoughts
Java Programming/Spring framework - Afterthoughts
As I mentioned earlier, Spring performs automatic conversion of values to both primitives and Objects; int, float, char, Double, boolean, Byte, you name it. Also note that <list>, which is simply a list of values, can be mapped to a List object, an Array object, or a primitive array (the two square brackets kind). There are even <set> and <map> tags which can be mapped to Sets and Maps, respectively. And at any point you can replace a value with a reference to a bean, like replace <value>myValue</value> with <ref bean="myBeanId"/>. This reference will return the corresponding JavaBean and Spring will store it as that variable.In addition, Spring can also serve as a replacement for properties files. An advantage is that Spring is XML based, so any XML parser can read it. And multiple beans can be stored for the same class within the same file. However, you may also place beans across multiple files, and use <import resource="myOtherBeanConfigFile.xml"/> to "import" other beans, just like importing Java classes.The last thing you may want to know is that Spring is most helpful when you use one bean to reference to other beans, classes, files, etc. You may have one bean contain a list of beans, which contain a list of beans, each of which contain another list of beans, â€¦ This way only the file name and location of most top level bean is "hard-coded" in the Java class, and everything else is specified by the XML configuration files.Here are a few tasks you might do to make your Spring application more robust. Do as many, or as little, as you like:I go by User:Hyad on Wikipedia and Wikibooks. Having been frustrated by other Spring tutorials that were too long, I decided after actually learning (and using) Spring at work that I would actually create my own. This tutorial came the closest to what I was looking for in a good tutorial, but it was a little too short. So I figured, why not give an example that could be used in the real world. And I figured Wikibooks would be the best place for it, considering if I put it on my website, 1. It would be too cumbersome to edit, and 2. Other people wouldn't be able to edit and update it easily. So drop me a line at my Wikipedia talk page and tell me what you think.