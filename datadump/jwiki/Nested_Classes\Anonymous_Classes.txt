https://en.wikibooks.org/wiki/Java_Programming/Nested_Classes#Anonymous_Classes
Anonymous Classes
In Java, a class definition and its instantiation can be combined into a single step. By doing that the class does not require a name. Those classes are called anonymous classes. An anonymous class can be defined and instantiated in contexts where a reference can be used, and it is a nested class to an existing class. Anonymous class is a special case of a class local to a method; hence they also can access final local variables of the enclosing method.Anonymous classes are most useful to create an instance of an interface or adapter class without needing a brand new class.In the above example the class that implements the ActionListener is anonymous. The class is defined where it is instantiated.The above code is harder to read than if the class is explicitly defined, so why use it? If many implementations are needed for an interface, those classes are used only in one particular place, and it would be hard to come up with names for them, using an anonymous inner class makes sense.The following example uses an anonymous inner class to implement an action listener.The following example does the same thing, but it names the class that implements the action listener.Using anonymous classes is especially preferable when you intend to use many different classes that each implement the same interface.