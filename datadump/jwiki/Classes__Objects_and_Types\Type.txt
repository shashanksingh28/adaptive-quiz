https://en.wikibooks.org/wiki/Java_Programming/Classes,_Objects_and_Types#Type
Classes, Objects and Types - Type
When an object is created, a reference to the object is also created. The object can not be accessed directly in Java, only through this object reference. This object reference has a type assigned to it. We need this type when passing the object reference to a method as a parameter. Java does strong type checking.Type is basically a list of features/operations, that can be performed through that object reference. The object reference type is basically a contract that guarantees that those operations will be there at run time.When a car is created, it comes with a list of features/operations listed in the user manual that guarantees that those will be there when the car is used.When you create an object from a class by default its type is the same as its class. It means that all the features/operations the class defined are there and available, and can be used. See below:You can assign this to a variable having the same type as the class:You can assign the created object reference to the class, super class, or to an interface the class implements:In the car analogy, the created car may have different Types of drivers. We create separate user manuals for them, an Average user manual, a Power user manual, a Child user manual, or a Handicapped user manual. Each type of user manual describes only those features/operations appropriate for the type of driver. For instance, the Power driver may have additional gears to switch to higher speeds, that are not available to other type of users...When the car key is passed from an adult to a child we are replacing the user manuals, that is called Type Casting.In Java, casts can occur in three ways: